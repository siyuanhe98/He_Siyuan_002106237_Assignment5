/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.manager;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Systems;
import model.customer.Customer;
import model.deliveryman.Deliveryman;
import model.manager.Manager;
import model.orders.Order;

/**
 *
 * @author Siyuan He
 */
public class ManagerPane extends javax.swing.JPanel {

    /**
     * Creates new form ManagerPane
     */
    private Systems sys;
    private Manager manager;
    private HashMap<Customer, Order> orders;

    public ManagerPane(Systems sys, Manager manager) {
        initComponents();
        this.sys = sys;
        this.manager = manager;
        populateMenu();
        lblRes.setText("Manager of" + manager.getRestaurant().getName());
        if (orders == null) {
            orders = new HashMap<Customer, Order>();
        }
        getOrders();
        if (orders != null) {
            populateOrders();

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        txtSaveDish = new javax.swing.JTextField();
        btnSaveDish = new javax.swing.JButton();
        txtDelDish = new javax.swing.JTextField();
        btnDelDish = new javax.swing.JButton();
        lblRes = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        txtId = new javax.swing.JTextField();
        btnAccept = new javax.swing.JButton();
        btnNot = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        txtDel = new javax.swing.JTextField();
        btnDel = new javax.swing.JButton();

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Dishes"
            }
        ));
        jScrollPane1.setViewportView(tblMenu);

        btnSaveDish.setText("jButton1");
        btnSaveDish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDishActionPerformed(evt);
            }
        });

        btnDelDish.setText("jButton2");
        btnDelDish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelDishActionPerformed(evt);
            }
        });

        lblRes.setText("jLabel1");

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Customer Name", "Status", "Deliveryman", "Dish"
            }
        ));
        jScrollPane2.setViewportView(tblOrder);

        btnAccept.setText("jButton1");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnNot.setText("jButton2");
        btnNot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotActionPerformed(evt);
            }
        });

        btnFind.setText("jButton1");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnDel.setText("jButton1");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRes)
                        .addContainerGap(639, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSaveDish, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSaveDish)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDelDish, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnDelDish))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFind)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAccept)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNot))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDel)))
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblRes)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(txtSaveDish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSaveDish)
                        .addGap(26, 26, 26)
                        .addComponent(txtDelDish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelDish))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAccept)
                            .addComponent(btnNot)
                            .addComponent(btnFind))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDel))))
                .addContainerGap(164, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveDishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDishActionPerformed
        // TODO add your handling code here:
        boolean addDish = manager.addDish(txtSaveDish.getText());
        if (!addDish) {
            JOptionPane.showMessageDialog(this, "Please input correct Dish!", "Warning", JOptionPane.ERROR_MESSAGE);
            txtSaveDish.setText("");
            return;
        }
        JOptionPane.showMessageDialog(this, "Save Successful!");

        txtSaveDish.setText("");
        System.out.println(addDish);
        populateMenu();

    }//GEN-LAST:event_btnSaveDishActionPerformed

    private void btnDelDishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelDishActionPerformed
        // TODO add your handling code here:
        boolean deleteDish = manager.deleteDish(txtDelDish.getText());
        System.out.println(deleteDish);

        if (!deleteDish) {
            JOptionPane.showMessageDialog(this, "Delete Failed!", "Warning", JOptionPane.ERROR_MESSAGE);
            txtDelDish.setText("");
            return;
        }
        JOptionPane.showMessageDialog(this, "Delete Successful!");

        txtDelDish.setText("");
        System.out.println(deleteDish);
        populateMenu();

    }//GEN-LAST:event_btnDelDishActionPerformed
    Order order = null;
    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(txtId.getText());
        for (Map.Entry<Customer, Order> s : orders.entrySet()) {
            if (id == s.getValue().getId()) {
                order = s.getValue();
                break;
            }
        }
        if (order == null) {
            JOptionPane.showMessageDialog(this, "Order not Found!", "Warning", JOptionPane.ERROR_MESSAGE);
            txtId.setText("");
        }


    }//GEN-LAST:event_btnFindActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        order.setStatus(true);
        populateOrders();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnNotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotActionPerformed
        // TODO add your handling code here:
        order.setStatus(false);
        populateOrders();
    }//GEN-LAST:event_btnNotActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        Deliveryman del = null;
        int id = Integer.parseInt(txtDel.getText());
        for (Deliveryman d : sys.getDeliverymanDirectory().getDeliverymanList()) {
            if (id == d.getId()) {
                del = d;
                break;
            }
        }
        if (del == null) {
            JOptionPane.showMessageDialog(this, "Deliveryman not Found!", "Warning", JOptionPane.ERROR_MESSAGE);
            txtDel.setText("");
            return;
        }
        order.setDeliveryman(del);
        populateOrders();
    }//GEN-LAST:event_btnDelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDelDish;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNot;
    private javax.swing.JButton btnSaveDish;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRes;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtDel;
    private javax.swing.JTextField txtDelDish;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtSaveDish;
    // End of variables declaration//GEN-END:variables

    public void populateMenu() {
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);
        for (String m : manager.getRestaurant().getMenu()) {

            Object[] row = new Object[1];
            row[0] = m;

            model.addRow(row);
        }
    }

    private void getOrders() {
        for (Customer c : sys.getCustomerDirectory().getCustomerList()) {
            for (Order o : c.getOrders()) {
                if (manager.getRestaurant().getName().equals(o.getRestaurant().getName())) {
                    orders.put(c, o);
                }
            }
        }
    }

    private void populateOrders() {
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setRowCount(0);
        for (Map.Entry<Customer, Order> s : orders.entrySet()) {
            Object[] row = new Object[5];
            row[0] = s.getValue().getId();
            row[1] = s.getKey().getName();
            if (s.getValue().isStatus()) {
                row[2] = "Accepted";
            } else {
                row[2] = "Not accepted";
            }
            if (s.getValue().getDeliveryman() != null) {
                row[3] = s.getValue().getDeliveryman().getName();
            }
            row[4] = s.getValue().getDish();
            model.addRow(row);
        }

    }

}
