/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.admin.deliveryman;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Systems;
import model.customer.Customer;
import model.deliveryman.Deliveryman;
import model.orders.Order;

/**
 *
 * @author Siyuan He
 */
public class DeliverymanPane extends javax.swing.JPanel {

    /**
     * Creates new form deliveryman
     */
    private Systems sys;
    private Deliveryman deliveryman;
    private HashMap<Customer, Order> orders;

    public DeliverymanPane(Systems sys, Deliveryman deliveryman) {
        initComponents();
        this.sys = sys;
        this.deliveryman = deliveryman;

        if (orders == null) {
            orders = new HashMap<Customer, Order>();
        }

        populateOrder();
        if (orders != null) {
            populateTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJob = new javax.swing.JTable();
        txtId = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnFinish = new javax.swing.JButton();

        jButton3.setText("jButton3");

        tblJob.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Customer Name", "Restaurant", "Order", "Mark"
            }
        ));
        jScrollPane1.setViewportView(tblJob);

        btnSearch.setText("jButton1");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnFinish.setText("jButton2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinish))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnFinish))
                .addContainerGap(277, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
//        int id = Integer.parseInt(txtId.getText());
//        for (Map.Entry<Customer, Order> s : orders.entrySet()) {
//            if (id == s.getValue().getId()) {
//                order = s.getValue();
//                break;
//            }
//        }
//        if (order == null) {
//            JOptionPane.showMessageDialog(this, "Order not Found!", "Warning", JOptionPane.ERROR_MESSAGE);
//            txtId.setText("");
//        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblJob;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    private void populateOrder() {

        for (Customer c : sys.getCustomerDirectory().getCustomerList()) {
            for (Order o : c.getOrders()) {
                if (o.getDeliveryman() != null) {
                    if (deliveryman.getId() == o.getDeliveryman().getId()) {
                        orders.put(c, o);
                    }
                }

            }
        }
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblJob.getModel();
        model.setRowCount(0);
        for (Map.Entry<Customer, Order> s : orders.entrySet()) {
            Object[] row = new Object[5];
            row[0] = s.getValue().getId();
            row[1] = s.getKey().getName();
            row[2] = s.getValue().getRestaurant().getName();
            if (s.getValue().isStatus()) {
                row[3] = "Accepted";
            } else {
                row[3] = "Not accepted";
            }
            row[4] = s.getValue().getDish();
            model.addRow(row);
        }
    }
}
